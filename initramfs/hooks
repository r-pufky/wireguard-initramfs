#!/bin/sh
#
# WG configuration file have restricted options compared to wg-quick config
# files. Parse end-user wg-quick config file and write wg config (unsupported
# options will cause wg to exit). Pass-through configuration if ENABLE_QUICK is
# set and copy wg-quick, bash to initramfs.
#
# Store both initramfs and wireguard adapter config to initramfs.
#
# Explicitly use dash shell for initramfs scripts.
#
# Reference:
# * https://manpages.debian.org/unstable/wireguard-tools/wg.8.en.html#CONFIGURATION_FILE_FORMAT
# * https://manpages.debian.org/unstable/wireguard-tools/wg-quick.8.en.html#CONFIGURATION

PREREQ=""

prereqs() {
  echo "${PREREQ}"
}

case "${1}" in
  prereqs)
    prereqs
    exit 0
  ;;
esac

. /usr/share/initramfs-tools/hook-functions

WG_INIT_CONFIG='/etc/wireguard/initramfs'

if [ ! -s "${WG_INIT_CONFIG}" ]; then
  echo "E: wireguard: Initramfs config ${WG_INIT_CONFIG} not found, skipping wireguard."
  exit 0
fi
. "${WG_INIT_CONFIG}"

if [ ! -s "${ADAPTER}" ]; then
  echo "E: wireguard: Adapter config ${ADAPTER} not found, skipping wireguard."
  exit 0
fi
if [ -z "${DATETIME_URL}" ]; then
  echo 'W: wireguard: DATETIME_URL not set (may cause issues for Raspberry Pi devices).'
fi

# Parse interface section and sanity check.
WG_INTERFACE_SECTION=$(sed -n '/^\[[Ii]/,/^\[/p' "${ADAPTER}")
WG_PEER_SECTIONS=$(sed '/^\[[Ii]/,/^\[/d' "${ADAPTER}")
WG_INTERFACE_NAME=$(basename "${ADAPTER}" | sed 's/[.].*$//')
WG_INTERFACE_ADDRESSES=$(echo -n "$(echo "${WG_INTERFACE_SECTION}" | grep -i address | sed 's/address[ ]*=[ ]*//I;s/,/\ /g')" | tr '\n' ' ')
WG_INTERFACE_MTU=$(echo "${WG_INTERFACE_SECTION}" | grep -i mtu | sed 's/mtu[ ]*=[ ]*//I')
WG_INTERFACE_FW_MARK=$(echo "${WG_INTERFACE_SECTION}" | grep -i fwmark | sed 's/fwmark[ ]*=[ ]*//I')
WG_INTERFACE_LISTEN_PORT=$(echo "${WG_INTERFACE_SECTION}" | grep -i listenport | sed 's/listenport[ ]*=[ ]*//I')
WG_INTERFACE_KEY=$(echo "${WG_INTERFACE_SECTION}" | grep -i privatekey | sed 's/privatekey[ ]*=[ ]*//I')

INTERFACE_ADDR_IPV4=''
INTERFACE_ADDR_IPV6=''
for address in ${WG_INTERFACE_ADDRESSES}; do
  case "${address}" in
    *:*) INTERFACE_ADDR_IPV6="${INTERFACE_ADDR_IPV6}${address} " ;;
    *) INTERFACE_ADDR_IPV4="${INTERFACE_ADDR_IPV4}${address} " ;;
  esac
done

if [ -z "${INTERFACE_ADDR_IPV4}" ] && [ -z "${INTERFACE_ADDR_IPV6}" ]; then
  echo "E: wireguard: ${ADAPTER}: [Interface] must have one 'Address' definition."
  exit 1
fi

# Parse AllowedIPs into primitive IPV4, IPV6 lists and sanity check.
WG_ALLOWED_IPS=$(grep -i allowedips "${ADAPTER}" | sed 's/allowedips[ ]*=[ ]*//I;s/,/\ /g' | tr '\n' ' ')

PEER_ALLOWED_IPS_IPV4=''
PEER_ALLOWED_IPS_IPV6=''
for cidr in ${WG_ALLOWED_IPS}; do
  case "${cidr}" in
    *:*) PEER_ALLOWED_IPS_IPV6="${PEER_ALLOWED_IPS_IPV6}${cidr} " ;;
    *) PEER_ALLOWED_IPS_IPV4="${PEER_ALLOWED_IPS_IPV4}${cidr} " ;;
  esac
done

if [ -z "${PEER_ALLOWED_IPS_IPV4}" ] && [ -z "${PEER_ALLOWED_IPS_IPV6}" ]; then
  echo "E: wireguard: ${ADAPTER}: [Peer] must have one 'AllowedIPs' definition."
  exit 1
fi

# Copy latest versions of shared objects needed for DNS resolution
for so in $(ldconfig -p | sed -nr 's/^\s*libnss_files\.so\.[0-9]+\s.*=>\s*//p'); do
  copy_exec "${so}"
done
for so in $(ldconfig -p | sed -nr 's/^\s*libnss_dns\.so\.[0-9]+\s.*=>\s*//p'); do
  copy_exec "${so}"
done
mkdir -p -- "${DESTDIR}/etc/wireguard"

if [ -n "${ENABLE_QUICK}" ]; then
  # Pass-through adapter config, add additional dependencies.
  cp "${ADAPTER}" "${DESTDIR}${ADAPTER}"
  copy_exec /usr/bin/bash
  copy_exec /usr/bin/wg-quick /sbin
else
  # wg base adapter config.
  cat > "${DESTDIR}${ADAPTER}" <<EOL
[Interface]
PrivateKey = ${WG_INTERFACE_KEY}
ListenPort = ${WG_INTERFACE_LISTEN_PORT:-0}
FwMark = ${WG_INTERFACE_FW_MARK:-0}

[Peer]
${WG_PEER_SECTIONS}
EOL
fi

# initramfs config with required primitives to turn-up interfaces.
cat > "${DESTDIR}/etc/wireguard/initramfs" <<EOL
ADAPTER="${ADAPTER}"
DATETIME_URL="${DATETIME_URL}"
ENABLE_QUICK="${ENABLE_QUICK}"
PERSISTENT="${PERSISTENT}"
INTERFACE="${WG_INTERFACE_NAME}"
INTERFACE_MTU=${WG_INTERFACE_MTU}
INTERFACE_ADDR_IPV4="$(echo "${INTERFACE_ADDR_IPV4}" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')"
INTERFACE_ADDR_IPV6="$(echo "${INTERFACE_ADDR_IPV6}" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')"
PEER_ALLOWED_IPS_IPV4="$(echo "${PEER_ALLOWED_IPS_IPV4}" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')"
PEER_ALLOWED_IPS_IPV6="$(echo "${PEER_ALLOWED_IPS_IPV6}" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')"
EOL

if [ -n "${DEBUG}" ]; then
  echo "D: wireguard: ${DESTDIR}${ADAPTER}"
  cat "${DESTDIR}${ADAPTER}" | sed 's/^/D: wireguard: /'
  echo 'D: wireguard: ---'
  echo "D: wireguard: ${DESTDIR}/etc/wireguard/initramfs"
  cat "${DESTDIR}/etc/wireguard/initramfs" | sed 's/^/D: wireguard: /'
fi

# Required wireguard dependencies.
manual_add_modules wireguard
copy_exec /usr/bin/wg /sbin
